if("object"==typeof module&&"object"==typeof module.exports){var $=require("jquery"),Raphael=void 0;try{Raphael=require("raphael")}catch(e){Raphael=require("webpack-raphael")}var TWEEN=require("tween.js")}var vis4=function(){};vis4.log=function(){try{null!==window.console&&console.log.apply(this,arguments)}catch(e){}},vis4.str2time=function(e){var t=e.split(".");return Math.round(.001*Date.UTC(2e3+t[0],t[1]-1,t[2]))},vis4.round=function(e,t){var i=Math.pow(10,t);return Math.round(e*i)/i},vis4.formatNumber_ksep=".",vis4.formatNumber_dsep=",",vis4.formatNumber=function(e,t){e=""+e;for(var i="",o=0,n=e.length-1;n>=0;n--)o>0&&o<e.length&&o%3==0&&(i=vis4.formatNumber_ksep+i),i=e[n]+i,o++;return i},vis4.parseTSV=function(e,t){var i,o,n=e.split("\n"),a=[];for(o=0;o<n.length;o++){var r=n[o];if(""!==r)if(t)if(0===o)i=r.split("\t");else{var s={},l=r.split("\t");if(l.length!=i.length)return"wrong tsv format";for(var h=0;h<i.length;h++)s[$.trim(i[h])]=$.trim(l[h]);a.push(s)}else a.push(r.split("\t"))}return a},vis4.map=function(e,t){for(var i={},o=0;o<e.length;o++)i[e[o][t]]=e[o];return i},vis4.DelayedTask=function(){var e=this;e.init=function(e){var t=this,i=[];for(var o in e)o>2&&i.push(e[o]);t.func=e[2],t.scope=e[1],t.args=i,t.running=!0,t.timer=window.setTimeout(this.run.bind(t),e[0])},e.run=function(){var e=this;e.func.apply(e.scope,e.args),e.running=!1},e.cancel=function(){vis4.log("canceling timer",this),window.clearTimeout(this.timer),this.running=!1},e.init(arguments)};var vis4loadingItem=function(e,t,i,o){this.url=e,this.id=t,this.type=i,this.loader=o,this.load=function(){$.get(this.url,this.processContent.bind(this))},this.processContent=function(e){"tsv"==this.type?this.data=vis4.parseTSV(e,!0):"json"==this.type?this.data="string"==typeof e?$.parseJSON(e):e:this.data=e,this.loader.itemLoaded()}},vis4loader=function(){this.items=[],this.byID={},this.add=function(e,t,i){null===i&&(i="text");var o=new vis4loadingItem(e,t,i,this);this.items.push(o),this.byID[t]=o},this.load=function(e){this.callback=e,this.loaded=0;for(var t=0;t<this.items.length;t++)this.items[t].load()},this.itemLoaded=function(){this.loaded++,this.loaded==this.items.length&&this.callback(this)},this.get=function(e){return this.byID[e].data}},vis4color=function(e){this.h=0,this.s=.5,this.l=.8,this.v=1,this.i=1,this.r=255,this.g=0,this.b=0,this.x="#FF0000",this.u=0,this.br=1,this.K=1/180*Math.PI,"hsi"!=e&&"hsl"!=e&&"hsb"!=e&&"hsv"!=e||(this.mode=e),this.log=function(e){null!==window.console&&console.log(e)},this.cos=function(e){return Math.cos(e*this.K)},this.trim=function(e){return Math.max(0,Math.min(1,e))},this.setMode=function(e){"hsv"!=e&&"hsi"!=e&&"hsl"!=e&&"hsb"!=e&&this.log("unknown color mode "+e),this.mode=e,this.rgb2hsx()},this.setHexColor=function(e){"#"!=e.charAt(0)&&(e="#"+e),4==e.length&&(e="#"+e.charAt(1)+e.charAt(1)+e.charAt(2)+e.charAt(2)+e.charAt(3)+e.charAt(3)),7!=e.length&&this.log("invalid hex color"),this.x=e,this.hex2int(),this.int2rgb(),this.rgb2hsx()},this.setRGBColor=function(e,t,i){this.r=e,this.b=i,this.g=t,this.rgb2int(),this.int2hex(),this.rgb2hsx()},this.setHSVColor=function(e,t,i){"hsv"!=this.mode&&(this.mode="hsv"),this.h=e,this.s=this.trim(t),this.v=this.trim(i),this.hsv2rgb(),this.rgb2int(),this.int2hex()},this.setHSLColor=function(e,t,i){"hsl"!=this.mode&&(this.mode="hsl"),this.h=e,this.s=this.trim(t),this.l=this.trim(i),this.hsl2rgb(),this.rgb2int(),this.int2hex()},this.setHSBColor=function(e,t,i){"hsb"!=this.mode&&(this.mode="hsb"),this.h=e,this.s=this.trim(t),this.b=this.trim(i),this.hsb2rgb(),this.rgb2int(),this.int2hex()},this.setHSIColor=function(e,t,i){"hsi"!=this.mode&&(this.mode="hsi"),this.h=e,this.s=this.trim(t),this.i=this.trim(i),this.hsi2rgb(),this.rgb2int(),this.int2hex()},this.onChange=function(){},this.rgb2int=function(){this.u=this.r<<16|this.g<<8|this.b,this.onChange()},this.int2rgb=function(){this.r=this.u>>16,this.g=this.u>>8&255,this.b=255&this.u},this.hex2int=function(){this.u=parseInt(this.x.substr(1),16),this.onChange()},this.int2hex=function(){var e="000000"+this.u.toString(16).toUpperCase();this.x="#"+e.substr(e.length-6),this.onChange()},this.int2rgb=function(){this.r=this.u>>16,this.g=this.u>>8&255,this.b=255&this.u},this.hsx2rgb=function(){switch(this.mode){case"hsv":this.hsv2rgb();break;case"hsi":this.hsi2rgb();break;case"hsl":this.hsl2rgb();break;case"hsb":this.hsb2rgb()}},this.rgb2hsx=function(){switch(this.mode){case"hsv":this.rgb2hsv();break;case"hsi":this.rgb2hsi();break;case"hsl":this.rgb2hsl();break;case"hsb":this.rgb2hsb()}},this.hue=function(e){return this._evaluate(e,"h"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this},this.saturation=function(e){return this._evaluate(e,"s"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this},this.lightness=function(e){return"hsl"!=this.mode?void this.log("WARNING: lightness property not available in "+this.mode+" mode"):(this._evaluate(e,"l"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this)},this.brightness=function(e){return"hsb"!=this.mode?void this.log("WARNING: brightness property not available in "+this.mode+" mode"):(this._evaluate(e,"br"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this)},this.value=function(e){return"hsv"!=this.mode?void this.log("WARNING: value property not available in "+this.mode+" mode"):(this._evaluate(e,"v"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this)},this.intensity=function(e){return"hsi"!=this.mode?void this.log("WARNING: intensity property not available in "+this.mode+" mode"):(this._evaluate(e,"i"),this.hsx2rgb(),this.rgb2int(),this.int2hex(),this)},this._evaluate=function(e,t){"string"==typeof e?("+"!=e.charAt(0)||isNaN(e.substr(1))?"-"!=e.charAt(0)||isNaN(e.substr(1))||(this[t]=this[t]-Number(e.substr(1))):this[t]=Number(this[t])+Number(e.substr(1)),"*"!=e.charAt(0)||isNaN(e.substr(1))?"/"!=e.charAt(0)||isNaN(e.substr(1))||(this[t]=this[t]/Number(e.substr(1))):this[t]=this[t]*Number(e.substr(1))):isNaN(e)||(this[t]=Number(e))},this.rgb=function(){return[this.r,this.g,this.b]},this.hsl=function(){return[this.h,this.s,this.l]},this.rgb2hsv=function(){var e=Math.min(Math.min(this.r,this.g),this.b),t=Math.max(Math.max(this.r,this.g),this.b),i=t-e;this.v=t/255,this.s=i/t,0===this.s?this.h=void 0:(this.r==t&&(this.h=(this.g-this.b)/i),this.g==t&&(this.h=2+(this.b-this.r)/i),this.b==t&&(this.h=4+(this.r-this.g)/i),this.h*=60,this.h<0&&(this.h+=360))},this.hsv2rgb=function(){var e,t,i,o,n,a=this.h,r=this.s,s=this._rgb,l=255*this.v;if(0===this.s&&isNaN(a))this.r=this.g=this.b=l;else switch(360==a&&(a=0),a/=60,e=Math.floor(a),t=a-e,i=l*(1-r),o=l*(1-r*t),n=l*(1-r*(1-t)),e){case 0:s(l,n,i);break;case 1:s(o,l,i);break;case 2:s(i,l,n);break;case 3:s(i,o,l);break;case 4:s(n,i,l);break;case 5:s(l,i,o)}},this._rgb=function(e,t,i){this.r=e,this.g=t,this.b=i},this.rgb2hsl=function(){var e=this.r/255,t=this.g/255,i=this.b/255,o=Math.min(Math.min(e,t),i),n=Math.max(Math.max(e,t),i);this.l=(n+o)/2,n==o?(this.s=0,this.h=void 0):this.l<.5?this.s=(n-o)/(n+o):this.s=(n-o)/(2-n-o),e==n?this.h=(t-i)/(n-o):t==n?this.h=2+(i-e)/(n-o):i==n&&(this.h=4+(e-t)/(n-o)),this.h*=60,this.h<0&&(this.h+=360)},this.hsl2rgb=function(){if(0===this.s)this.r=this.g=this.b=255*this.l;else{var e,t,i=[0,0,0],o=[0,0,0];t=this.l<.5?this.l*(1+this.s):this.l+this.s-this.l*this.s,e=2*this.l-t;var n=this.h/360;i[0]=n+1/3,i[1]=n,i[2]=n-1/3;for(var a=0;a<3;a++)i[a]<0&&(i[a]+=1),i[a]>1&&(i[a]-=1),6*i[a]<1?o[a]=e+6*(t-e)*i[a]:2*i[a]<1?o[a]=t:3*i[a]<2?o[a]=e+(t-e)*(2/3-i[a])*6:o[a]=e;this.r=255*o[0],this.g=255*o[1],this.b=255*o[2]}},this.rgb2hsb=function(){this.rgb2hsl(),this.br=this._rgbLuminance()},this._rgbLuminance=function(){return(.2126*this.r+.7152*this.g+.0722*this.b)/255},this.hsb2rgb=function(){var e,t=.001,i=0,o=1,n=.5;this.l=n,this.hsl2rgb(),e=this._rgbLuminance();for(var a=0;Math.abs(e-this.br)>t&&a<100;)e>this.br?o=n:i=n,n=(i+o)/2,this.l=n,this.hsl2rgb(),e=this._rgbLuminance(),a++;this.br=e},this.rgb2hsi=function(){var e,t=this.r,i=this.g,o=this.b,n=(Math.max(Math.max(t,i),o),t+i+o);t/=n,i/=n,o/=n,e=Math.min(Math.min(t,i),o),this.i=(t+i+o)/765,this.h=this.acos((t-.5*i-.5*o)/Math.sqrt((t-i)*(t-i)+(t-o)*(i-o))),this.s=1-3*e,o>i&&(this.h=360-this.h)},this.hsi2rgb=function(){var e,t,i,o=this.h,n=this.i,a=this.s,r=this.cos;o<=120?(t=(1-a)/3,e=(1+a*r(o)/r(60-o))/3,i=1-(t+e)):o<=240?(o-=120,e=(1-a)/3,i=(1+a*r(o)/r(60-o))/3,t=1-(e+i)):(o-=240,i=(1-a)/3,t=(1+a*r(o)/r(60-o))/3,e=1-(i+t)),e=Math.min(255,e*n*3*255),i=Math.min(255,i*n*3*255),t=Math.min(255,t*n*3*255)}};vis4color.fromHex=function(e,t){null==t&&(t="hsl");var i=new vis4color(t);return i.setHexColor(e),i},vis4color.fromRGB=function(e,t,i,o){null===o&&(o="hsl");var n=new vis4color(o);return n.setRGBolor(e,t,i),n},vis4color.fromHSV=function(e,t,i,o){null===o&&(o="hsl");var n=new vis4color(o);return n.setHSVColor(e,t,i),n},vis4color.fromHSL=function(e,t,i,o){null===o&&(o="hsl");var n=new vis4color(o);return n.setHSLColor(e,t,i),n},vis4color.fromHSB=function(e,t,i,o){null===o&&(o="hsl");var n=new vis4color(o);return n.setHSBColor(e,t,i),n},vis4color.fromHSI=function(e,t,i,o){null===o&&(o="hsl");var n=new vis4color(o);return n.setHSIColor(e,t,i),n};var BubbleTree=function(e,t,i){var o=$.history||{callback:null,options:null,init:function(e,t){this.callback=e,this.options=t,this.load("/")},load:function(e){"function"==typeof this.callback&&this.callback(e)}},n=this;if(n.version="2.0.3",n.$container=$(e.container).empty(),n.config=$.extend({clearColors:!1,autoColors:!1,rootPath:"",minRadiusLabels:40,minRadiusAmounts:20,minRadiusHideLabels:0,cutLabelsAt:50},e),n.tooltip=e.tooltipCallback?e.tooltipCallback:function(){},e.tooltip&&(n.tooltip=e.tooltip),n.style=e.bubbleStyles,n.ns=BubbleTree,n.nodesByUrlToken={},n.nodeList=[],n.iconsByUrlToken={},n.globalNodeCounter=0,n.displayObjects=[],n.bubbleScale=1,n.globRotation=0,n.currentYear=e.initYear,n.currentCenter=void 0,n.currentTransition=void 0,n.baseUrl="",n.loadData=function(e){$.ajax({url:e,dataType:"json",success:this.setData.bind(this)})},n.setData=function(e){var t=this;e||(e=t.config.data),t.initData(e),t.initPaper(),t.initBubbles(),t.initTween(),t.initHistory()},n.initData=function(e){var t=this;e.level=0,t.preprocessData(e),t.traverse(e,0),t.treeRoot=e},n.preprocessData=function(e){var t=this,i=t.config.maxNodesPerLevel;if(i&&i<e.children.length){var o=t.sortChildren(e.children);o.reverse();var n,a=[],r=[],s=0;for(var l in e.children)l<i?a.push(e.children[l]):(r.push(e.children[l]),s+=Math.max(0,e.children[l].amount));e.children=a,e.children.push({label:"More",name:"more",amount:s,children:r,breakdown:n})}},n.traverse=function(e,t){var i,o,n=this,a=n.config.bubbleStyles;if(e.children||(e.children=[]),n.nodeList.push(e),e.famount=n.ns.Utils.formatNumber(e.amount),e.parent&&(e.level=e.parent.level+1),n.config.clearColors===!0&&(e.color=!1),a){var r=["color","shortLabel","icon"];$.each(r,function(t,i){a.hasOwnProperty("id")&&a.id.hasOwnProperty(e.id)&&a.id[e.id].hasOwnProperty(i)?e[i]=a.id[e.id][i]:e.hasOwnProperty("name")&&a.hasOwnProperty("name")&&a.name.hasOwnProperty(e.name)&&a.name[e.name].hasOwnProperty(i)?e[i]=a.name[e.name][i]:e.hasOwnProperty("taxonomy")&&a.hasOwnProperty(e.taxonomy)&&a[e.taxonomy].hasOwnProperty(e.name)&&a[e.taxonomy][e.name].hasOwnProperty(i)&&(e[i]=a[e.taxonomy][e.name][i])})}if(!e.color)if(n.config.autoColors)if(0==e.level)e.color=vis4color.fromHSL(45,.9,.5).x;else if(1==e.level){var s=e.parent.children.length;e.color=vis4color.fromHSL(t/s*360,.7,.5).x}else e.color=vis4color.fromHex(e.parent.color).lightness("*"+(.5+.5*Math.random())).x;else e.level>0?e.color=e.parent.color:e.color="#999999";for(e.children.length<2&&e.color&&(e.color=vis4color.fromHex(e.color).saturation("*.86").x),e.level>0&&(i=e.parent.children,i.length>1&&(e.left=i[(t-1+i.length)%i.length],e.right=i[(Number(t)+1)%i.length],e.right==e.left&&(e.right=void 0))),o=void 0!==e.label&&""!==e.label?e.label:void 0!==e.token&&""!==e.token?e.token:""+n.globalNodeCounter,n.globalNodeCounter++,"number"==typeof o?e.urlToken=o.toString():e.urlToken=o.toLowerCase().replace(/\W/g,"-");n.nodesByUrlToken.hasOwnProperty(e.urlToken);)e.urlToken+="-";n.nodesByUrlToken[e.urlToken]=e,e.maxChildAmount=0,e.children=n.sortChildren(e.children,!0,n.config.sortBy),$.each(e.children,function(t,i){i.parent=e,e.maxChildAmount=Math.max(e.maxChildAmount,i.amount),n.traverse(i,t)}),e.breakdowns&&(e.breakdownsByName={},$.each(e.breakdowns,function(t,i){i.famount=n.ns.Utils.formatNumber(i.amount),i.name&&(e.breakdownsByName[i.name]=i)}))},n.sortChildren=function(e,t,i){var o=[],a=!0;if("label"==i?(i=n.compareLabels,t=!1):i=n.compareAmounts,e.sort(i),t){for(;e.length>0;)o.push(a?e.pop():e.shift()),a=!a;return o}return e},n.compareAmounts=function(e,t){return e.amount>t.amount?1:e.amount==t.amount?0:-1},n.compareLabels=function(e,t){return e.label>t.label?1:e.label==t.label?0:-1},n.initPaper=function(){var e,t=this,i=t.$container,o=t.treeRoot,n=i.width(),a=i.height(),r=Raphael(i[0],n,a),s=.5*Math.min(n,a)-40,l=t.ns.Vector,h=new l(.5*n,.5*a);t.width=n,t.height=a,t.paper=r,e=Math.pow((Math.pow(o.amount,.6)+2*Math.pow(o.maxChildAmount,.6))/s,1.6666666667),t.a2radBase=t.ns.a2radBase=e,t.origin=h,$(window).resize(t.onResize.bind(t))},n.onResize=function(){var e,t=this,i=t.$container,o=i.width(),n=i.height(),a=.5*Math.min(o,n)-40,r=t.treeRoot;t.paper.setSize(o,n),t.origin.x=.5*o,t.origin.y=.5*n,t.width=o,t.height=n,e=Math.pow((Math.pow(r.amount,.6)+2*Math.pow(r.maxChildAmount,.6))/a,1.6666666667),t.a2radBase=t.ns.a2radBase=e,$.each(t.displayObjects,function(e,i){"bubble"==i.className&&(i.bubbleRad=t.ns.Utils.amount2rad(i.node.amount))}),t.currentCenter&&t.changeView(t.currentCenter.urlToken)},n.initTween=function(){this.tweenTimer=setInterval(this.loop,1e3/120)},n.initBubbles=function(){var e=this,t=e.treeRoot,i=!1;e.ns.Bubbles;e.bubbleClasses=[],e.config.hasOwnProperty("bubbleType")||(e.config.bubbleType=["plain"]),$.isArray(e.config.bubbleType)||(e.config.bubbleType=[e.config.bubbleType]),$.isArray(e.config.bubbleType)&&$.each(e.config.bubbleType,function(t){"icon"==e.config.bubbleType[t]&&(i=!0),e.bubbleClasses.push(e.getBubbleType(e.config.bubbleType[t]))});var o=e.createBubble(t,e.origin,0,0,t.color);e.traverseBubbles(o)},n.getBubbleType=function(e){var t=this,i=t.ns.Bubbles;switch(e){case"pie":return i.Pies;case"donut":return i.Donut;case"multi":return i.Multi;case"icon":return i.Icon;case"icondonut":return i.IconDonut;default:return i.Plain}},n.traverseBubbles=function(e){var t,i,o,n,a,r=this,s=r.ns.Utils.amount2rad,l=0,h=0,c=2*Math.PI;i=e.node.children,$.each(i,function(e,t){l+=s(t.amount)}),i.length>0&&(t=r.createRing(e.node,e.pos,0,{stroke:"#888","stroke-dasharray":"-"})),$.each(i,function(t,i){n=s(i.amount)/l*c,a=h+.5*n,isNaN(a)&&vis4.log(h,n,i.amount,l,c),i.centerAngle=a,o=r.createBubble(i,e.pos,0,a,i.color),h+=n,r.traverseBubbles(o)})},n.createBubble=function(e,t,i,o,n){var a,r=this,s=(r.ns,e.level);return isNaN(s)&&(s=0),s=Math.min(s,r.bubbleClasses.length-1),a=new r.bubbleClasses[s](e,r,t,i,o,n),r.displayObjects.push(a),a},n.createRing=function(e,t,i,o){var n,a=this,r=a.ns;return n=new r.Ring(e,a,t,i,o),a.displayObjects.push(n),n},n.changeView=function(e){var t,i,o,n=this,a=(n.paper,.35*Math.min(n.width,n.height)),r=n.ns,s=r.Utils,l=n.origin,h=s.amount2rad,c=n.treeRoot,b=n.nodesByUrlToken,d=b.hasOwnProperty(e)?b[e]:null,u=new r.Layout,p=2*Math.PI,f=n.getBubble.bind(n),v=n.getRing.bind(n),g=n.unifyAngle;if(null!==d){var m,y,w,x,k,M,T,P,C,B,A,O=!1,L=!1;for(o in n.displayObjects)n.displayObjects[o].hideFlag=!0;if(d==c||d.parent==c&&d.children.length<2){u.$(n).bubbleScale=1,u.$(l).x=.5*n.width,u.$(l).y=.5*n.height,m=f(c),d!=c&&(m.childRotation=-d.centerAngle),k=h(c.amount)+h(c.maxChildAmount)+20,C=v(c),u.$(C).rad=k;for(o in c.children)x=c.children[o],t=f(x),u.$(t).angle=g(x.centerAngle+m.childRotation),u.$(t).rad=k}else{var N=d;d.children.length<2&&(d=d.parent),B=a/(h(d.amount)+2*h(d.maxChildAmount)),u.$(n).bubbleScale=B,m=f(d),n.currentCenter&&n.currentCenter==d.left?L=!0:n.currentCenter&&n.currentCenter==d.right&&(O=!0);var I=n.shortestAngleTo;u.$(m).angle=I(m.angle,0),k=(h(d.amount)+h(d.maxChildAmount))*B+20,C=v(d),u.$(C).rad=k,y=f(d.parent),y.childRotation=-d.centerAngle;for(var R=y;R&&R.node.parent;)R=f(R.node.parent,!0),u.$(R).rad=0;u.$(y).rad=0;var H=.5*n.width;if(M=0-Math.max(.8*H-B*(h(d.parent.amount)+h(Math.max(1.15*d.amount+1.15*d.maxChildAmount,.85*d.left.amount,.85*d.right.amount))),B*h(d.parent.amount)*-1+.15*H)+H,d.left&&d.right){B*h(Math.max(d.left.amount,d.right.amount))}A=k+M,u.$(l).x=.5*n.width-M-(d!=N?.35*k:0),u.$(l).y=.5*n.height,new vis4.DelayedTask(1500,vis4,vis4.log,l,y.pos),M+=.1*n.width,C=v(d.parent),u.$(C).rad=M,u.$(m).rad=M;var S=0-(d!=N?N.centerAngle+m.childRotation:0);for(o in d.children)x=d.children[o],t=f(x),u.$(t).angle=n.shortestAngleTo(t.angle,x.centerAngle+m.childRotation+S),u.$(t).rad=k;var U=.07*n.height;d.left&&(w=d.left,T=h(w.amount)*B,P=p-Math.asin((.5*n.paper.height+T-U)/M),t=f(w),u.$(t).rad=M,u.$(t).angle=I(t.angle,P)),d.right&&(w=d.right,T=h(w.amount)*B,P=Math.asin((.5*n.paper.height+T-U)/M),t=f(w),u.$(t).rad=M,u.$(t).angle=I(t.angle,P)),d=N}for(o in n.displayObjects){var D=n.displayObjects[o];D.hideFlag&&D.visible?(u.$(D).alpha=0,"bubble"==D.className&&D.node.level>1&&(u.$(D).rad=0),u.hide(D)):D.hideFlag||(u.$(D).alpha=1,D.visible||(D.alpha=0,u.show(D)))}i=new r.Transitioner(n.currentCenter==d?0:1e3),i.changeLayout(u),n.currentTransition=i,!n.currentCenter&&$.isFunction(n.config.firstNodeCallback)&&n.config.firstNodeCallback(d),n.currentCenter=d}else s.log("node "+e+" not found")},n.unifyAngle=function(e){for(var t=Math.PI,i=2*t;e>=i;)e-=i;for(;e<0;)e+=i;return e},n.shortestAngle=function(e,t){var i=Math.PI,o=2*i,a=n.unifyAngle;e=a(e),t=a(t);var r=t-e;return r>i&&(r-=o),r<-i&&(r+=o),r},n.shortestAngleTo=function(e,t){return e+n.shortestAngle(e,t)},n.shortestLeftTurn=function(e,t){var i=n.shortestAngle(e,t);return i>0&&(i-=2*Math.PI),e+i},n.shortestRightTurn=function(e,t){var i=n.shortestAngle(e,t);return i<0&&(i=2*Math.PI+i),e+i},n.getBubble=function(e,t){return this.getDisplayObject("bubble",e,t)},n.getRing=function(e){return this.getDisplayObject("ring",e)},n.getDisplayObject=function(e,t,i){var o,n,a=this;for(o in a.displayObjects)if(n=a.displayObjects[o],n.className==e&&n.node==t)return i||(n.hideFlag=!1),n;vis4.log(e+" not found for node",t)},n.initHistory=function(){o.init(n.urlChanged.bind(n),{unescape:",/"})},n.freshUrl="",n.urlChanged=function(e){var t=this,i=t.currentTransition;t.freshUrl||e.indexOf("/~/")&&(t.baseUrl=e.substr(0,e.indexOf("/~/"))),t.freshUrl=e,i&&i.running?(vis4.log("transition is running at the moment, adding listener"),i.onComplete(t.changeUrl.bind(t))):t.changeUrl()},n.changeUrl=function(){var e,t=this,i=t.freshUrl.split("/"),n=i[i.length-1];""===t.freshUrl&&t.navigateTo(t.treeRoot),t.nodesByUrlToken.hasOwnProperty(n)?(e=t.getUrlForNode(t.nodesByUrlToken[n]),t.freshUrl!=e?o.load(e):t.navigateTo(t.nodesByUrlToken[n],!0)):t.navigateTo(t.treeRoot)},n.navigateTo=function(e,t){var i=this;t?i.changeView(e.urlToken):o.load(i.getUrlForNode(e)),$(".bubbletree-label, .bubbletree-label2",i.$container).removeClass("current"),$(".bubbletree-label2."+e.id,i.$container).addClass("current"),$(".bubbletree-label."+e.id,i.$container).addClass("current")},n.getUrlForNode=function(e){var t=[];for(t.push(e.urlToken);e.parent;)t.push(e.parent.urlToken),e=e.parent;return t.reverse(),n.baseUrl+"/~/"+t.join("/")},n.onNodeClick=function(e){$.isFunction(n.config.nodeClickCallback)&&n.config.nodeClickCallback(e)},n.clean=function(){$(".bubbletree-label").remove()},this.loop=function(){TWEEN.update()},!n.config.hasOwnProperty("data"))throw new Error("no data");"string"==typeof n.config.data?n.loadData():new vis4.DelayedTask(1e3,n,n.setData,n.config.data)};BubbleTree.Styles={},BubbleTree.Layout=function(){var e=this;e.objects=[],e.props=[],e.toHide=[],e.toShow=[],e.$=function(e){var t,i,o,n=this;for(t in n.objects)if(i=n.objects[t],i==e)return n.props[t];return n.objects.push(e),o={},n.props.push(o),o},e.show=function(e){var t=this;t.toShow.push(e)},e.hide=function(e){var t=this;t.toHide.push(e)}},BubbleTree.Line=function(e,t,i,o,n,a){this.bc=e,this.o=i,this.angle=o,this.fromRad=n,this.attr=t,this.toRad=a,this.getXY=function(){this.x1=this.o.x+Math.cos(this.angle)*this.fromRad,this.y1=this.o.y-Math.sin(this.angle)*this.fromRad,this.x2=this.o.x+Math.cos(this.angle)*this.toRad,this.y2=this.o.y-Math.sin(this.angle)*this.toRad},this.init=function(){this.getXY(),console.log("foo","M"+this.x1+" "+this.y1+"L"+this.x2+" "+this.y2,t),this.path=this.bc.paper.path("M"+this.x1+" "+this.y1+"L"+this.x2+" "+this.y2).attr(this.attr)},this.draw=function(){this.getXY(),this.path.attr({path:"M"+this.x1+" "+this.y1+"L"+this.x2+" "+this.y2})},this.init()},BubbleTree.Loader=function(e){var t=this;t.config=e,t.ns=BubbleTree,t.loadData=function(){var e=this,t=e.config.data;console.log("loading url ",t),$.ajax({url:t,context:e,dataType:"json",success:function(e){this.run(e)}})},t.run=function(e){var t=this,i=new BubbleTree(t.config);i.setData(e),t.config.instance=i},!t.config.hasOwnProperty("data"),"string"==typeof t.config.data?t.loadData():t.run(t.config.data)},BubbleTree.MouseEventGroup=function(e,t){var i=this;i.target=e,i.members=t,i.click=function(e){var t,i,o=this,n=o.members;o.clickCallback=e;for(t in n)i=n[t],$(i).click(o.handleClick.bind(o))},i.handleClick=function(e){var t=this;t.clickCallback({target:t.target,origEvent:e,mouseEventGroup:t})},i.hover=function(e){var t,i,o=this,n=o.members;o.hoverCallback=e;for(t in n)i=n[t],$(i).hover(o.handleMemberHover.bind(o),o.handleMemberUnHover.bind(o))},i.unhover=function(e){var t=this;t.unhoverCallback=e},i.wasHovering=!1,i.mouseIsOver=!1,i.handleMemberHover=function(e){var t=this;new vis4.DelayedTask(25,t,t.handleMemberHoverDelayed,e)},i.handleMemberHoverDelayed=function(e){var t=this;t.mouseIsOver=!0,t.wasHovering||(t.wasHovering=!0,$.isFunction(t.hoverCallback)&&t.hoverCallback({target:t.target,origEvent:e,mouseEventGroup:t}))},i.handleMemberUnHover=function(e){var t=this;t.mouseIsOver=!1,new vis4.DelayedTask(40,t,t.handleMemberUnHoverDelayed,e)},i.handleMemberUnHoverDelayed=function(e){var t=this;t.mouseIsOver||(t.wasHovering=!1,$.isFunction(t.unhoverCallback)&&t.unhoverCallback({target:t.target,origEvent:e,mouseEventGroup:t}))},i.addMember=function(e){var t=this;t.hoverCallback&&$(e).hover(t.handleMemberHover.bind(t),t.handleMemberUnHover.bind(t)),t.members.push(e)},i.removeMember=function(e){var t,i=this,o=i.members,n=[];i.clickCallback&&$(e).unbind("click"),i.hoverCallback&&$(e).unbind("mouseenter mouseleave");for(t in o)o[t]!=e&&n.push(o[t]);i.members=n}},BubbleTree.Ring=function(e,t,i,o,n){var a=this;a.className="ring",a.rad=o,a.bc=t,a.attr=n,a.origin=i,a.alpha=1,a.visible=!1,a.node=e,a.init=function(){},a.draw=function(){var e=this,t=e.origin;e.visible&&e.circle.attr({cx:t.x,cy:t.y,r:e.rad,"stroke-opacity":e.alpha})},a.hide=function(){var e=this;e.circle.remove(),e.visible=!1},a.show=function(){var e=this;e.circle=e.bc.paper.circle(i.x,i.y,e.rad).attr(e.attr),e.visible=!0,e.circle.toBack()},a.init()},BubbleTree.Transitioner=function(e){var t=this;t.duration=e,t.running=!1,t.completeCallbacks=[],t.changeLayout=function(e){var t,i,o,n,a=this;a.running=!0,a.layout=e;for(t in e.toShow)i=e.toShow[t],$.isFunction(i.show)&&i.show();for(t in e.objects)if(i=e.objects[t],void 0!==i&&null!==i)if(o=e.props[t],a.duration>0){var r=new TWEEN.Tween(i),s={};for(n in o)s[n]=o[n];r.to(s,a.duration),r.easing(TWEEN.Easing.Exponential.Out),$.isFunction(i.draw)&&r.onUpdate(i.draw.bind(i)),t==e.objects.length-1&&r.onComplete(a._completed.bind(a)),r.start()}else{for(n in o)i[n]=o[n];i&&$.isFunction(i.draw)&&i.draw()}if(0===a.duration){for(t in e.objects)i=e.objects[t],i&&$.isFunction(i.draw)&&i.draw();a._completed()}},t.onComplete=function(e){var t=this;try{$.isFunction(e)&&t.completeCallbacks.push(e)}catch(i){}},t._completed=function(){var e,t,i=this,o=i.completeCallbacks;i.running=!1;for(e in i.layout.objects)t=i.layout.objects[e],t&&$.isFunction(t.draw)&&t.draw();for(e in i.layout.toHide)t=i.layout.toHide[e],t&&$.isFunction(t.hide)&&t.hide();for(e in o)o[e]()}},BubbleTree.Utils={},BubbleTree.Utils.log=function(){try{window.hasOwnProperty("console")&&console.log.apply(this,arguments)}catch(e){}},BubbleTree.Utils.amount2rad=function(e){return Math.pow(Math.max(0,e)/BubbleTree.a2radBase,.6)},BubbleTree.Utils.formatNumber=function(e){var t="";return e<0&&(e*=-1,t="-"),e>=1e12?t+Math.round(e/1e11)/10+"t":e>=1e9?t+Math.round(e/1e8)/10+"b":e>=1e6?t+Math.round(e/1e5)/10+"m":e>=1e3?t+Math.round(e/100)/10+"k":t+e},BubbleTree.Vector=function(e,t){var i=this;i.x=e,i.y=t,i.length=function(){var e=this;return Math.sqrt(e.x*e.x+e.y*e.y)},i.normalize=function(e){var t=this,i=t.length();e||(e=1),t.x*=e/i,t.y*=e/i},i.clone=function(){var e=this;return new BubbleTree.Vector(e.x,e.y)}},BubbleTree.Bubbles=BubbleTree.Bubbles||{},BubbleTree.Bubbles.Plain=function(e,t,i,o,n,a){var r=BubbleTree,s=r.Utils,l=this;l.className="bubble",l.node=e,l.paper=t.paper,l.origin=i,l.bc=t,l.rad=o,l.angle=n,l.color=a,l.alpha=1,l.visible=!1,l.ns=r,l.pos=r.Vector(0,0),l.bubbleRad=s.amount2rad(this.node.amount),l.container=l.bc.$container,l.childRotation=0,l.getXY=function(){var e=this,t=e.origin,i=e.angle,o=e.rad;void 0===e.pos&&(e.pos=new e.ns.Vector(0,0)),e.pos.x=t.x+Math.cos(i)*o,e.pos.y=t.y-Math.sin(i)*o},l.init=function(){var e=this;e.getXY();e.node.shortLabel||(e.node.shortLabel=e.node.label.length>e.bc.config.cutLabelsAt+3?e.node.label.substr(0,e.bc.config.cutLabelsAt)+"...":e.node.label),e.initialized=!0},l.onclick=function(e){var t=this;t.bc.onNodeClick(t.node),t.bc.navigateTo(t.node)},l.onhover=function(e){var t=this,i=t.bc.$container[0];e.node=t.node,e.target=t,e.bubblePos={x:t.pos.x,y:t.pos.y},e.mousePos={x:e.origEvent.pageX-i.offsetLeft,y:e.origEvent.pageY-i.offsetTop},e.type="SHOW",t.bc.tooltip(e)},l.onunhover=function(e){var t=this,i=t.bc.$container[0];e.node=t.node,e.type="HIDE",e.target=t,e.bubblePos={x:t.pos.x,y:t.pos.y},e.mousePos={x:e.origEvent.pageX-i.offsetLeft,y:e.origEvent.pageY-i.offsetTop},t.bc.tooltip(e)},l.draw=function(){var e=this,t=Math.max(5,e.bubbleRad*e.bc.bubbleScale),i=(e.pos.x,e.pos.y,e.getXY(),e.pos.x),o=e.pos.y;if(e.visible){e.circle.attr({cx:e.pos.x,cy:e.pos.y,r:t,"fill-opacity":e.alpha}),e.node.children.length>1?e.dashedBorder.attr({cx:e.pos.x,cy:e.pos.y,r:t-4,"stroke-opacity":.9*e.alpha}):e.dashedBorder.attr({"stroke-opacity":0}),e.label.show(),e.label.find("*").show(),e.label2.show(),t>=e.bc.config.minRadiusLabels?e.label2.hide():t>=e.bc.config.minRadiusAmounts?e.label.find(".bubbletree-desc").hide():t>=e.bc.config.minRadiusHideLabels?e.label.hide():(e.label.hide(),e.label2.hide()),e.label.css({width:2*t+"px",opacity:e.alpha}),e.label.css({left:e.pos.x-t+"px",top:e.pos.y-.5*e.label.height()+"px"});var n=Math.max(70,3*t);e.label2.css({width:n+"px",opacity:e.alpha}),e.label2.css({left:i-.5*n+"px",top:o+t+"px"})}},l.hide=function(){var e=this;e.circle.remove(),e.dashedBorder.remove(),e.label.remove(),e.label2.remove(),e.visible=!1},l.show=function(){var e=this,t=e.pos.x,i=e.pos.y,o=Math.max(5,e.bubbleRad*e.bc.bubbleScale);e.circle=e.paper.circle(t,i,o).attr({stroke:!1,fill:e.color}),e.dashedBorder=e.paper.circle(t,i,o-3).attr({stroke:"#ffffff","stroke-dasharray":"- "}),e.label=$('<div class="bubbletree-label '+e.node.id+'"><div class="bubbletree-amount">'+s.formatNumber(e.node.amount)+'</div><div class="bubbletree-desc">'+e.node.shortLabel+"</div></div>"),e.container.append(e.label),e.node.children.length>0&&($(e.circle.node).css({cursor:"pointer"}),$(e.label).css({cursor:"pointer"})),e.label2=$('<div class="bubbletree-label2 '+e.node.id+'"><span>'+e.node.shortLabel+"</span></div>"),e.container.append(e.label2);var n=[e.circle.node,e.label,e.dashedBorder.node],a=new e.ns.MouseEventGroup(e,n);a.click(e.onclick.bind(e)),a.hover(e.onhover.bind(e)),a.unhover(e.onunhover.bind(e)),e.visible=!0},l.addOverlay=function(){var e=this;e.overlay=e.paper.circle(e.circle.attrs.cx,e.circle.attrs.cy,e.circle.attrs.r).attr({stroke:!1,fill:"#fff",opacity:0}),Raphael.svg&&e.overlay.node.setAttribute("class",e.node.id),$(e.overlay.node).css({cursor:"pointer"}),$(e.overlay.node).click(e.onclick.bind(e)),$(e.label).click(e.onclick.bind(e))},l.init()},BubbleTree.Bubbles=BubbleTree.Bubbles||{},BubbleTree.Bubbles.Donut=function(e,t,i,o,n,a){var r=BubbleTree,s=r.Utils,l=this;l.className="bubble",l.node=e,l.paper=t.paper,l.origin=i,l.bc=t,l.rad=o,l.angle=n,l.color=a,l.alpha=1,l.visible=!1,l.ns=r,l.bubbleRad=s.amount2rad(this.node.amount),l.childRotation=0,l.getXY=function(){var e=this,t=e.origin,i=e.angle,o=e.rad;e.pos.x=t.x+Math.cos(i)*o,e.pos.y=t.y-Math.sin(i)*o},l.init=function(){var e=this;e.pos=new e.ns.Vector(0,0),e.getXY();var t,i,o,n=[],a=[],r=e.bc.config.bubbleStyles;e.node.shortLabel||(e.node.shortLabel=e.node.label.length>50?e.node.label.substr(0,30)+"...":e.node.label),e.breakdownOpacities=[.2,.7,.45,.6,.35],e.breakdownColors=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1];for(i in e.node.breakdowns)t=e.node.breakdowns[i],t.famount=s.formatNumber(t.amount),o=t.amount/e.node.amount,n.push(o),a.push(t),r&&r.hasOwnProperty("name")&&r.name.hasOwnProperty(t.name)&&r.name[t.name].hasOwnProperty("opacity")&&(e.breakdownOpacities[a.length-1]=r.name[t.name].opacity),r&&r.hasOwnProperty("name")&&r.name.hasOwnProperty(t.name)&&r.name[t.name].hasOwnProperty("color")&&(e.breakdownColors[a.length-1]=r.name[t.name].color,e.breakdownOpacities[a.length-1]=1);e.node.breakdowns=a,e.breakdown=n;e.initialized=!0},l.onclick=function(e){var t=this;t.bc.navigateTo(t.node)},l.onhover=function(e){var t=this,i=t.bc.$container[0];e.node=t.node,e.target=t,e.bubblePos={x:t.pos.x,y:t.pos.y},e.mousePos={x:e.origEvent.pageX-i.offsetLeft,y:e.origEvent.pageY-i.offsetTop},e.type="SHOW",t.bc.tooltip(e)},l.onunhover=function(e){var t=this,i=t.bc.$container[0];e.node=t.node,e.target=t,e.type="HIDE",e.bubblePos={x:t.pos.x,y:t.pos.y},e.mousePos={x:e.origEvent.pageX-i.offsetLeft,y:e.origEvent.pageY-i.offsetTop},t.bc.tooltip(e)},this.draw=function(){var e=this,t=Math.max(5,e.bubbleRad*e.bc.bubbleScale),i=(e.pos.x,e.pos.y,e.getXY(),t>20),o=e.pos.x,n=e.pos.y;if(e.visible){if(e.circle.attr({cx:o,cy:n,r:t,"fill-opacity":e.alpha}),e.node.children.length>1?e.dashedBorder.attr({cx:o,cy:n,r:.85*t,"stroke-opacity":.8*e.alpha}):e.dashedBorder.attr({"stroke-opacity":0}),e.breakdown.length>1){var a,r,s,l,h,c,b,d,u,p,f=.85*t,v=.5*-Math.PI;for(a in e.breakdown){p=e.breakdown[a]*Math.PI*2,r=o+Math.cos(v)*f,c=n+Math.sin(v)*f,s=o+Math.cos(v+p)*f,b=n+Math.sin(v+p)*f,l=o+Math.cos(v+p)*t,d=n+Math.sin(v+p)*t,h=o+Math.cos(v)*t,u=n+Math.sin(v)*t,v+=p;var g="M"+r+" "+c+" A"+f+","+f+" 0 "+(p>Math.PI?"1,1":"0,1")+" "+s+","+b+" L"+l+" "+d+" A"+t+","+t+" 0 "+(p>Math.PI?"1,0":"0,0")+" "+h+" "+u+" Z";e.breakdownArcs[a].attr({path:g,"stroke-opacity":.2*e.alpha,"fill-opacity":e.breakdownOpacities[a]*e.alpha})}}i?(e.label.show(),t<40?(e.label.find(".bubbletree-desc").hide(),e.label2.show()):(e.label.find(".bubbletree-desc").show(),e.label2.hide())):(e.label.hide(),e.label2.show()),e.label.css({width:2*t*.9+"px",opacity:e.alpha}),e.label.css({left:e.pos.x-.9*t+"px",top:e.pos.y-.53*e.label.height()+"px"});var m=Math.max(80,3*t);e.label2.css({width:m+"px",opacity:e.alpha}),e.label2.css({left:o-.5*m+"px",top:n+t+"px"})}},this.hide=function(){var e,t=this;t.circle.remove(),t.dashedBorder.remove(),t.label.remove(),t.label2.remove(),t.visible=!1;for(e in t.breakdownArcs)t.breakdownArcs[e].remove()},l.show=function(){var e,t=this,i=Math.max(5,t.bubbleRad*t.bc.bubbleScale);t.circle=t.paper.circle(t.pos.x,t.pos.y,i).attr({stroke:!1,fill:t.color}),$.isFunction(t.bc.config.initTooltip)&&t.bc.config.initTooltip(t.node,t.circle.node),t.dashedBorder=t.paper.circle(t.pos.x,t.pos.y,.85*i).attr({stroke:"#fff","stroke-opacity":.4*t.alpha,"stroke-dasharray":". ",fill:!1}),t.label=$('<div class="bubbletree-label '+t.node.id+'"><div class="bubbletree-amount">'+s.formatNumber(t.node.amount)+'</div><div class="bubbletree-desc">'+t.node.shortLabel+"</div></div>"),
t.bc.$container.append(t.label),t.node.children.length>1&&($(t.circle.node).css({cursor:"pointer"}),$(t.label).css({cursor:"pointer"})),t.label2=$('<div class="bubbletree-label2 '+t.node.id+'"><span>'+t.node.shortLabel+"</span></div>"),t.bc.$container.append(t.label2);var o=[t.circle.node,t.label];if(t.breakdown.length>1){t.breakdownArcs={};for(e in t.breakdown){var n=t.breakdownColors[e]?t.breakdownColors[e]:"#fff",a=t.paper.path("M 0 0 L 2 2").attr({fill:n,"fill-opacity":.4*Math.random()+.3,stroke:"#fff"});t.breakdownArcs[e]=a,$.isFunction(t.bc.config.initTooltip)&&t.bc.config.initTooltip(t.node.breakdowns[e],a.node)}for(e in t.breakdownArcs)$(t.breakdownArcs[e].node).click(t.onclick.bind(t))}var r=new t.ns.MouseEventGroup(t,o);r.click(t.onclick.bind(t)),r.hover(t.onhover.bind(t)),r.unhover(t.onunhover.bind(t)),t.visible=!0},l.arcHover=function(e){var t,i=this,o=i.bc.$container[0],n=i.breakdownArcs,a=i.node.breakdowns;for(t in n)if(n[t].node==e.target)return e.node=a[t],e.bubblePos={x:i.pos.x,y:i.pos.y},e.mousePos={x:e.pageX-o.offsetLeft,y:e.pageY-o.offsetTop},e.target=i,e.type="SHOW",void i.bc.tooltip(e);vis4.log("cant find the breakdown node")},l.arcUnhover=function(e){var t,i=this,o=i.bc.$container[0],n=i.breakdownArcs,a=i.node.breakdowns;for(t in n)if(n[t].node==e.target)return e.node=a[t],e.bubblePos={x:i.pos.x,y:i.pos.y},e.mousePos={x:e.pageX-o.offsetLeft,y:e.pageY-o.offsetTop},e.type="HIDE",e.target=i,void i.bc.tooltip(e);vis4.log("cant find the breakdown node")},l.init()},BubbleTree.Bubbles=BubbleTree.Bubbles||{},BubbleTree.Bubbles.Icon=function(e,t,i,o,n,a){var r=BubbleTree,s=r.Utils,l=this;l.className="bubble",l.node=e,l.paper=t.paper,l.origin=i,l.bc=t,l.rad=o,l.angle=n,l.color=a,l.alpha=1,l.visible=!1,l.ns=r,l.pos=r.Vector(0,0),l.bubbleRad=s.amount2rad(this.node.amount),l.iconLoaded=!1,l.childRotation=0,l.getXY=function(){var e=this,t=e.origin,i=e.angle,o=e.rad;void 0===e.pos&&(e.pos=new e.ns.Vector(0,0)),e.pos.x=t.x+Math.cos(i)*o,e.pos.y=t.y-Math.sin(i)*o},l.init=function(){var e=this;e.getXY(),e.hasIcon=e.node.hasOwnProperty("icon"),e.node.shortLabel||(e.node.shortLabel=e.node.label.length>50?e.node.label.substr(0,30)+"...":e.node.label),e.initialized=!0},l.show=function(){var e=this,t=e.pos.x,i=e.pos.y,o=Math.max(5,e.bubbleRad*e.bc.bubbleScale);e.circle=e.paper.circle(t,i,o).attr({stroke:!1,fill:e.color}),e.dashedBorder=e.paper.circle(t,i,Math.min(o-3,.95*o)).attr({stroke:"#ffffff","stroke-dasharray":"- "}),$.isFunction(e.bc.config.initTooltip)&&e.bc.config.initTooltip(e.node,e.circle.node),e.label=$('<div class="bubbletree-label '+e.node.id+'"><div class="bubbletree-amount">'+s.formatNumber(e.node.amount)+'</div><div class="bubbletree-desc">'+e.node.shortLabel+"</div></div>"),e.bc.$container.append(e.label),$.isFunction(e.bc.config.initTooltip)&&e.bc.config.initTooltip(e.node,e.label[0]),e.label2=$('<div class="bubbletree-label2 '+e.node.id+'"><span>'+e.node.shortLabel+"</span></div>"),e.bc.$container.append(e.label2),e.node.children.length>0&&($(e.circle.node).css({cursor:"pointer"}),$(e.label).css({cursor:"pointer"})),e.visible=!0,e.hasIcon?e.iconLoaded?e.displayIcon():e.loadIcon():e.addOverlay()},l.loadIcon=function(){var e=this,t=new vis4loader;t.add(e.bc.config.rootPath+e.node.icon),t.load(e.iconLoadComplete.bind(e))},l.iconLoadComplete=function(e){var t,i,o,n=this;t=e.items[0].data,n.iconPathData="",t=$(t),o=$("path",t);for(i in o)o[i]&&$.isFunction(o[i].getAttribute)&&(n.iconPathData+=String(o[i].getAttribute("d"))+" ");n.iconLoaded=!0,n.displayIcon()},l.displayIcon=function(){var e,t=this;t.iconPaths=[],e=t.paper.path(t.iconPathData),e.attr({fill:"#fff",stroke:"none"}).translate(-50,-50),t.iconPaths.push(e),t.addOverlay()},l.addOverlay=function(){var e=this;if(e.overlay=e.paper.circle(e.circle.attrs.cx,e.circle.attrs.cy,e.circle.attrs.r).attr({stroke:!1,fill:"#fff","fill-opacity":0}),Raphael.svg&&e.overlay.node.setAttribute("class",e.node.id),$(e.overlay.node).css({cursor:"pointer"}),$(e.overlay.node).click(e.onclick.bind(e)),$(e.label).click(e.onclick.bind(e)),$(e.label2).click(e.onclick.bind(e)),$.isPlainObject(e.bc.tooltip)){var t=e.bc.tooltip.content(e.node);$(e.overlay.node).qtip({position:{target:"mouse",viewport:$(window),adjust:{x:7,y:7}},show:{delay:e.bc.tooltip.delay||100},content:{title:t[0],text:t[1]}})}},l.removeIcon=function(){var e,t=this;for(e in t.iconPaths)t.iconPaths[e].remove();t.iconPaths=[]},l.draw=function(){var e,t,i,o,n,a=this,r=Math.max(5,a.bubbleRad*a.bc.bubbleScale),s=(a.pos.x,a.pos.y,a.getXY(),a.pos.x),l=a.pos.y,h=a.hasIcon&&r>15,c=a.hasIcon?r>40:r>20;if(a.visible){a.circle.attr({cx:s,cy:l,r:r,"fill-opacity":a.alpha}),a.overlay&&a.overlay.attr({cx:s,cy:l,r:Math.max(10,r)}),a.node.children.length>1?a.dashedBorder.attr({cx:a.pos.x,cy:a.pos.y,r:Math.min(r-3,r-4),"stroke-opacity":.9*a.alpha}):a.dashedBorder.attr({"stroke-opacity":0}),c?(a.label.show(),h&&r<70||!h&&r<40?(a.label.find(".bubbletree-desc").hide(),a.label2.show()):(a.label.find(".bubbletree-desc").show(),a.label2.hide())):(a.label.hide(),a.label2.show()),n=h?l+.77*r-a.label.height():l-.5*a.label.height(),a.label.css({width:(h?1.2*r:2*r)+"px",opacity:a.alpha}),a.label.css({left:(h?s-.6*r:s-r)+"px",top:n+"px"});var b=Math.max(80,3*r);if(a.label2.css({width:b+"px",opacity:a.alpha}),a.label2.css({left:s-.5*b+"px",top:l+r+"px"}),a.hasIcon)if(h){i=(r-(c?.5*a.label.height():0))/60;for(e in a.iconPaths)t=a.iconPaths[e],o="1"==Raphael.version[0]?"scale("+i+") translate("+s/i+", "+(l+(c?a.label.height()*-.5:0))/i+")":"scale("+i+") translate("+(s/i-50)+", "+((l+(c?a.label.height()*-.5:0))/i-50)+")",t.node.setAttribute("transform",o),t.attr({"fill-opacity":a.alpha})}else for(e in a.iconPaths)t=a.iconPaths[e],t.attr({"fill-opacity":0})}},l.hide=function(){var e=this;e.circle.remove(),e.dashedBorder.remove(),e.label.remove(),e.label2.remove(),e.visible=!1,e.hasIcon&&e.removeIcon(),e.overlay&&e.overlay.remove()},l.onclick=function(e){var t=this;t.bc.onNodeClick(t.node),t.bc.navigateTo(t.node)},l.onhover=function(e){var t=this,i=t.bc.$container[0];e.node=t.node,e.bubblePos={x:t.pos.x,y:t.pos.y},e.mousePos={x:e.origEvent.pageX-i.offsetLeft,y:e.origEvent.pageY-i.offsetTop},e.type="SHOW",e.target=t,t.bc.tooltip(e)},l.onunhover=function(e){var t=this,i=t.bc.$container[0];e.node=t.node,e.type="HIDE",e.target=t,e.bubblePos={x:t.pos.x,y:t.pos.y},e.mousePos={x:e.origEvent.pageX-i.offsetLeft,y:e.origEvent.pageY-i.offsetTop},t.bc.tooltip(e)},l.init()},BubbleTree.Bubbles.IconDonut=function(e,t,o,n,a,r){var s=BubbleTree,l=s.Utils,h=this;h.className="bubble",h.node=e,h.paper=t.paper,h.origin=o,h.bc=t,h.rad=n,h.angle=a,h.color=r,h.alpha=1,h.visible=!1,h.ns=s,h.pos=s.Vector(0,0),h.bubbleRad=l.amount2rad(this.node.amount),h.iconLoaded=!1,h.childRotation=0,h.getXY=function(){var e=this,t=e.origin,i=e.angle,o=e.rad;void 0===e.pos&&(e.pos=new e.ns.Vector(0,0)),e.pos.x=t.x+Math.cos(i)*o,e.pos.y=t.y-Math.sin(i)*o},h.init=function(){var e=this;e.pos=new e.ns.Vector(0,0),e.getXY(),e.hasIcon=e.node.hasOwnProperty("icon");var t,i,o,n=[],a=[],r=e.bc.config.bubbleStyles;e.node.shortLabel||(e.node.shortLabel=e.node.label.length>50?e.node.label.substr(0,30)+"...":e.node.label),e.breakdownOpacities=[.2,.7,.45,.6,.35],e.breakdownColors=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1];for(i in e.node.breakdowns)t=e.node.breakdowns[i],t.famount=l.formatNumber(t.amount),o=t.amount/e.node.amount,n.push(o),a.push(t),r&&r.hasOwnProperty("name")&&r.name.hasOwnProperty(t.name)&&r.name[t.name].hasOwnProperty("opacity")&&(e.breakdownOpacities[a.length-1]=r.name[t.name].opacity),r&&r.hasOwnProperty("name")&&r.name.hasOwnProperty(t.name)&&r.name[t.name].hasOwnProperty("color")&&(e.breakdownColors[a.length-1]=r.name[t.name].color,e.breakdownOpacities[a.length-1]=1);e.node.breakdowns=a,e.breakdown=n,e.initialized=!0},h.show=function(){var e=this,t=e.pos.x,i=e.pos.y,o=Math.max(5,e.bubbleRad*e.bc.bubbleScale);e.circle=e.paper.circle(t,i,o).attr({stroke:!1,fill:e.color}),$.isFunction(e.bc.config.initTooltip)&&e.bc.config.initTooltip(e.node,e.circle.node),e.label=$('<div class="bubbletree-label '+e.node.id+'"><div class="bubbletree-amount">'+l.formatNumber(e.node.amount)+'</div><div class="bubbletree-desc">'+e.node.shortLabel+"</div></div>"),e.bc.$container.append(e.label),$.isFunction(e.bc.config.initTooltip)&&e.bc.config.initTooltip(e.node,e.label[0]),e.label2=$('<div class="bubbletree-label2 '+e.node.id+'"><span>'+e.node.shortLabel+"</span></div>"),e.bc.$container.append(e.label2),e.node.children.length>1&&($(e.circle.node).css({cursor:"pointer"}),$(e.label).css({cursor:"pointer"})),e.visible=!0,e.hasIcon?e.iconLoaded?e.displayIcon():e.loadIcon():e.addOverlay()},h.loadIcon=function(){var e=this,t=new vis4loader;t.add(e.bc.config.rootPath+e.node.icon),t.load(e.iconLoadComplete.bind(e))},h.iconLoadComplete=function(e){var t,i,o,n=this;t=e.items[0].data,n.iconPathData="",t=$(t),o=$("path",t);for(i in o)o[i]&&"function"==typeof o[i].getAttribute&&(n.iconPathData+=String(o[i].getAttribute("d"))+" ");n.iconLoaded=!0,n.displayIcon()},h.displayIcon=function(){var e,t=this;t.iconPaths=[],e=t.paper.path(t.iconPathData),e.attr({fill:"#fff",stroke:"none"}).translate(-50,-50),t.iconPaths.push(e),t.addOverlay()},h.addOverlay=function(){var e=this;if(e.overlay=e.paper.circle(e.circle.attrs.cx,e.circle.attrs.cy,e.circle.attrs.r).attr({stroke:!1,fill:"#fff","fill-opacity":0}),Raphael.svg&&e.overlay.node.setAttribute("class",e.node.id),$(e.overlay.node).css({cursor:"pointer"}),$(e.overlay.node).click(e.onclick.bind(e)),$(e.label).click(e.onclick.bind(e)),$(e.label2).click(e.onclick.bind(e)),$.isPlainObject(e.bc.tooltip)){var t=e.bc.tooltip.content(e.node),o={position:{target:"mouse",viewport:$(window),adjust:{x:7,y:7}},show:{delay:e.bc.tooltip.delay||100},content:{title:t[0],text:t[1]},style:{width:300}};$(e.overlay.node).qtip(o),$(e.label).qtip(o)}if(e.breakdown.length>1){e.breakdownArcs={};for(i in e.breakdown){var n=e.breakdownColors[i]?e.breakdownColors[i]:"#fff",a=e.paper.path("M 0 0 L 2 2").attr({fill:n,"fill-opacity":.4*Math.random()+.3,stroke:"#fff"});if(e.breakdownArcs[i]=a,$.isPlainObject(e.bc.tooltip)){var t=e.bc.tooltip.content(e.node.breakdowns[i]);$(a.node).qtip({position:{target:"mouse",viewport:$(window),adjust:{x:7,y:7}},show:{delay:e.bc.tooltip.delay||100},content:{title:t[0],text:t[1]},style:{width:300}})}}for(i in e.breakdownArcs)$(e.breakdownArcs[i].node).click(e.onclick.bind(e))}},h.removeIcon=function(){var e,t=this;for(e in t.iconPaths)t.iconPaths[e].remove();t.iconPaths=[]},h.draw=function(){var e,t,i,o,n,a=this,r=Math.max(5,a.bubbleRad*a.bc.bubbleScale),s=(a.pos.x,a.pos.y,a.getXY(),a.pos.x),l=a.pos.y,h=a.hasIcon&&r>15,c=a.hasIcon?r>40:r>20;if(a.visible){if(a.circle.attr({cx:s,cy:l,r:r,"fill-opacity":a.alpha}),a.overlay&&a.overlay.attr({cx:s,cy:l,r:Math.max(10,r)}),c)a.label.show(),h&&r<70||!h&&r<40?(a.label.find(".bubbletree-desc").hide(),a.label2.show()):(a.label.find(".bubbletree-desc").show(),a.label2.hide());else{a.label.hide();var b=a.node.parent.hasOwnProperty("children")?a.node.parent.children.length:0;"label"==a.bc.config.sortBy;b<=10?a.label2.show():r>5.5?a.label2.show():a.label2.hide()}n=h?l+.77*r-a.label.height():l-.5*a.label.height(),a.label.css({width:(h?1.2*r:2*r)+"px",opacity:a.alpha}),a.label.css({left:(h?s-.6*r:s-r)+"px",top:n+"px"});var d=Math.max(80,3*r);if(a.label2.css({width:d+"px",opacity:a.alpha}),a.label2.css({left:s-.5*d+"px",top:l+r+"px"}),a.hasIcon)if(h){i=(r-(c?.5*a.label.height():0))/60;for(e in a.iconPaths)t=a.iconPaths[e],o="scale("+i+") translate("+(s/i-50)+", "+((l+(c?a.label.height()*-.5:0))/i-50)+")",t.node.setAttribute("transform",o),t.attr({"fill-opacity":a.alpha})}else for(e in a.iconPaths)t=a.iconPaths[e],t.attr({"fill-opacity":0});if(a.breakdown.length>1){var e,u,p,f,v,g,m,y,w,x,k=.85*r,$=.5*-Math.PI;for(e in a.breakdown){x=a.breakdown[e]*Math.PI*2,u=s+Math.cos($)*k,g=l+Math.sin($)*k,p=s+Math.cos($+x)*k,m=l+Math.sin($+x)*k,f=s+Math.cos($+x)*r,y=l+Math.sin($+x)*r,v=s+Math.cos($)*r,w=l+Math.sin($)*r,$+=x;var t="M"+u+" "+g+" A"+k+","+k+" 0 "+(x>Math.PI?"1,1":"0,1")+" "+p+","+m+" L"+f+" "+y+" A"+r+","+r+" 0 "+(x>Math.PI?"1,0":"0,0")+" "+v+" "+w+" Z";a.hasOwnProperty("breakdownArcs")&&a.breakdownArcs[e].attr({path:t,"stroke-opacity":.2*a.alpha,"fill-opacity":a.breakdownOpacities[e]*a.alpha})}}}},h.hide=function(){var e,t=this;t.circle.remove(),t.label.remove(),t.label2.remove(),t.visible=!1,t.hasIcon&&t.removeIcon(),t.overlay&&t.overlay.remove();for(e in t.breakdownArcs)t.breakdownArcs[e].remove()},h.onclick=function(e){var t=this;t.bc.onNodeClick(t.node),t.bc.navigateTo(t.node)},h.onhover=function(e){var t=this,i=t.bc.$container[0];e.node=t.node,e.bubblePos={x:t.pos.x,y:t.pos.y},e.mousePos={x:e.origEvent.pageX-i.offsetLeft,y:e.origEvent.pageY-i.offsetTop},e.type="SHOW",e.target=t,t.bc.tooltip(e)},h.onunhover=function(e){var t=this,i=t.bc.$container[0];e.node=t.node,e.type="HIDE",e.target=t,e.bubblePos={x:t.pos.x,y:t.pos.y},e.mousePos={x:e.origEvent.pageX-i.offsetLeft,y:e.origEvent.pageY-i.offsetTop},t.bc.tooltip(e)},h.init()},"object"==typeof module&&"object"==typeof module.exports&&(module.exports=BubbleTree);
//# sourceMappingURL=data:application/json;base64,
